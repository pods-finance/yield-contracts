
name: lint+compile+test

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main

jobs:
  coverage:
    name: test
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: setup-node
        uses: actions/setup-node@v2
        with:
          cache: "yarn"
          node-version: '16.14.0'

      - name: install packages
        run: yarn

      - name: lint
        run: yarn solhint

      - name: compile
        run: yarn compile
        env:
          INFURA_PROJECT_ID: ${{ secrets.INFURA_PROJECT_ID }}
          DEV_MNEMONIC: ${{ secrets.DEV_MNEMONIC }}

      - name: test
        run: yarn test --no-compile
        env:
          INFURA_PROJECT_ID: ${{ secrets.INFURA_PROJECT_ID }}
          DEV_MNEMONIC: ${{ secrets.DEV_MNEMONIC }}

      - name: coverage
        run: npx hardhat coverage
        env:
          INFURA_PROJECT_ID: ${{ secrets.INFURA_PROJECT_ID }}
          DEV_MNEMONIC: ${{ secrets.DEV_MNEMONIC }}

      - name: "Upload report to Coveralls"
        uses: "coverallsapp/github-action@master"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: "./coverage/lcov.info"

  fuzzy:
    name: fuzzy
    runs-on: ubuntu-latest
    strategy:
        matrix:
          test: [ {contract: Invariants, config: assertion}, {contract: Invariants, config: property}, {contract: Crytic, config: crytic} ]

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: setup-node
        uses: actions/setup-node@v2
        with:
          cache: "yarn"
          node-version: '16.14.0'

      - name: install packages
        run: yarn

      - name: echidna
        uses: crytic/echidna-action@v2
        with:
          solc-version: 0.8.17
          files: test/invariants/STETHVault${{ matrix.test.contract }}.sol
          contract: STETHVault${{ matrix.test.contract }}
          config: test/invariants/config-${{ matrix.test.config }}.yaml
